#!/usr/bin/env bash
set -euo pipefail

# ===================================
# GLOBAL CONFIGURATION
# ===================================
INPUT="/app/public/input.json"
OUTPUT="/app/public/output.json"

# ===================================
# UTILITIES
# ===================================
abort() {
	echo "ERROR: $1" >&2
	exit 1
}

info() {
	echo "INFO: $1"
}

success() {
	echo "SUCCESS: $1"
}

# ===================================
# MAIN LOGIC
# ===================================
main() {
	info "Processing input.json into output.json..."
	# Check if input file exists
	if [[ ! -f "$INPUT" ]]; then
		abort "Input file not found at $INPUT"
	fi
	# Read input file and validate JSON format
	local apps
	apps=$(<"$INPUT")
	# Validate JSON format
	if ! jq -e . <<<"$apps" >/dev/null 2>&1; then
		abort "Invalid JSON in $INPUT"
	fi
	# Process and output the results
	jq -n --argjson apps "$apps" '
    $apps
    | reduce .[] as $app ([]; . + (
        ($app.branches // [])
        | map(select(.branchName and .displayName)
          | {
              name: .displayName,
              label: "Branch: \(.branchName) (\(.stage))",
              target: (
                "https://" +
                (.branchName | ascii_downcase | gsub("[^a-z0-9]"; "-")) +
                "." + $app.defaultDomain
              )
            })
      ))
  ' >"$OUTPUT"
	success "output.json updated successfully at $OUTPUT"
}

main "$@"
